{"version":3,"sources":["logo.svg","components/Node.js","components/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","state","startFinishClass","this","node","colored","pointer","className","key","React","Component","Grid","onClick","bubbleSort","nodes","renew","arr","slice","sort","Math","random","setState","inOrder","noSwaps","count","i","length","j","x","numb","filter","el","y","temp","time","setTimeout","animating","isPointer","console","log","row","curRow","col","curNode","push","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAe,I,2BCyBAA,G,wDArBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAMf,IAAIC,EAAmB,OAOvB,OANGC,KAAKH,MAAMI,KAAKC,SAAWF,KAAKH,MAAMM,QACrCJ,EAAmB,eACdC,KAAKH,MAAMI,KAAKC,UACrBH,EAAmB,qBAInB,qBAAKK,UAAWL,GAAuBC,KAAKH,MAAMI,KAAKI,S,GAfhDC,IAAMC,YC6GVC,G,wDA3GX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IA6BVY,QAAU,WACN,EAAKC,WAAW,EAAKZ,MAAMa,QA/BZ,EAiCnBC,MAAQ,WACJ,IAAIC,EAAM,EAAKf,MAAMa,MAAMG,MAAM,GACjCD,EAAIE,MAAK,kBAAMC,KAAKC,SAAW,MAC/B,EAAKC,SAAS,CAACP,MAAOE,EAAKM,SAAS,KApCrB,EAuCnBT,WAAa,SAACG,GAGV,IAFA,IAAIO,EACAC,EAAQ,EACJC,EAAIT,EAAIU,OAAQD,EAAI,EAAGA,IAAI,CAC/BF,GAAU,EACN,IAAI,IAAII,EAAI,EAAGA,EAAIF,EAAI,EAAGE,IAAI,CAC1B,IAAIC,EAAIZ,EAAIW,GAAGE,KAAKC,QAAO,SAAAC,GAAE,OAAIA,EAAG1B,WAChC2B,EAAIhB,EAAIW,EAAI,GAAGE,KAAKC,QAAO,SAAAC,GAAE,OAAIA,EAAG1B,WACxC,GAAGuB,EAAEF,OAASM,EAAEN,OAAO,CACnB,IAAIO,EAAOjB,EAAIW,GACfX,EAAIW,GAAKX,EAAIW,EAAE,GACfX,EAAIW,EAAE,GAAKM,EACXV,GAAU,EACV,EAAKW,KAAKV,EAAMR,EAAIC,MAAM,GAAGQ,EAAEE,GAC/BH,SAEA,EAAKU,KAAKV,EAAMR,EAAIC,MAAM,GAAGQ,EAAEE,GAC/BH,IAGZ,GAAGD,EAAQ,CACP,EAAKW,KAAKV,EAAMR,EAAIC,MAAM,GAAGQ,EAAEE,GAC/B,OAIRQ,YAAW,WACP,EAAKd,SAAS,CAACe,WAAW,EAAOd,SAAS,MAC3C,IAAME,IAnEM,EAsEnBU,KAAO,SAACV,EAAOR,EAAIS,EAAEE,GACjBQ,YAAW,WACPnB,EAAIW,GAAGU,WAAY,EACnBrB,EAAIW,EAAE,GAAGU,WAAY,EACrB,EAAKhB,SAAS,CAACP,MAAOE,EAAKoB,WAAW,IACtCpB,EAAIW,GAAGU,WAAY,EACnBrB,EAAIW,EAAE,GAAGU,WAAY,EACrBC,QAAQC,IAAId,KACb,IAAMD,IA5ET,EAAKvB,MAAQ,CACTa,MAAO,GACPsB,WAAW,EACXd,SAAS,GALE,E,gEAWf,IADA,IAAMR,EAAQ,GACN0B,EAAM,EAAGA,EAAM,GAAIA,IAAM,CAE7B,IADA,IAAMC,EAAS,GACPC,EAAM,EAAGA,EAAM,GAAIA,IAAM,CAC7B,IAAIC,EAAU,CACVD,MACAF,MACAhC,IAAI,KAAD,OAAOgC,GAAP,OAAaE,GAChBrC,QAASqC,GAAOF,GAEpBC,EAAOG,KAAKD,GAEpB7B,EAAM8B,KAAK,CAACf,KAAMY,EACNjC,IAAI,KAAD,OAAOgC,GACVH,WAAW,IAGvBlC,KAAKkB,SAAS,CAACP,Y,+BAyDf,OACI,gCACI,wBAAQP,UAAWJ,KAAKF,MAAMqB,SAAWnB,KAAKF,MAAMmC,UAAY,aAAe,cAAexB,QAAST,KAAKS,QAA5G,iCACA,wBAAQL,UAAWJ,KAAKF,MAAMmC,UAAY,aAAe,cAAexB,QAAST,KAAKY,MAAtF,qBACA,uBAAOR,UAAU,OAAjB,SACKJ,KAAKF,MAAMa,MAAM+B,KAAI,SAACL,GACnB,OACI,gCACI,oBAAIjC,UAAU,YAAd,SACKiC,EAAIX,KAAKgB,KAAI,SAACzC,GACX,OAAO,qBAAIG,UAAU,SAAd,UAAsC,cAAC,EAAD,CAAMH,KAAMA,EAAME,QAASkC,EAAIH,WAAgBjC,EAAKI,KAA1F,MAA4BJ,EAAKI,WAHxCgC,EAAIhC,iB,GA5FzBC,IAAMC,Y,MCSVoC,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCISwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5078a69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport './styles/Node.css'\n\nclass Node extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let startFinishClass = 'node';\n        if(this.props.node.colored && this.props.pointer){\n            startFinishClass = 'node pointer'\n        }else if(this.props.node.colored){\n            startFinishClass = 'node node-colored'\n        }\n\n        return(\n            <div className={startFinishClass} key={this.props.node.key}>\n                \n            </div>\n        );\n    }\n}\n\nexport default Node;","import React from 'react';\nimport Node from './Node';\nimport './styles/Grid.css'\n\nclass Grid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodes: [],\n            animating: false,\n            inOrder: true\n        };\n    }\n\n    componentDidMount() {\n        const nodes = [];\n        for(let row = 0; row < 25; row++){\n            const curRow = [];\n            for(let col = 0; col < 25; col++){\n                let curNode = {\n                    col, \n                    row,\n                    key: `id${row}${col}`,\n                    colored: col <= row ? true : false \n                };\n                curRow.push(curNode);\n            }\n        nodes.push({numb: curRow, \n                    key: `kr${row}`,\n                    isPointer: false\n                    })\n        }\n        this.setState({nodes})\n    }\n\n    onClick = () => {\n        this.bubbleSort(this.state.nodes);\n    }\n    renew = () => {\n        let arr = this.state.nodes.slice(0);\n        arr.sort(() => Math.random() - 0.5);\n        this.setState({nodes: arr, inOrder: false})\n    }\n\n    bubbleSort = (arr) => {\n        var noSwaps;\n        var count = 0;\n        for(var i = arr.length; i > 0; i--){\n            noSwaps = true;\n                for(var j = 0; j < i - 1; j++){\n                    let x = arr[j].numb.filter(el => el.colored)\n                    let y = arr[j + 1].numb.filter(el => el.colored)\n                    if(x.length > y.length){\n                        var temp = arr[j];\n                        arr[j] = arr[j+1];\n                        arr[j+1] = temp;\n                        noSwaps = false;\n                        this.time(count,arr.slice(0),i,j)\n                        count++  \n                    }else{\n                        this.time(count,arr.slice(0),i,j)\n                        count++ \n                    }\n                }\n            if(noSwaps){\n                this.time(count,arr.slice(0),i,j)\n                break\n            \n            };\n        }\n        setTimeout(() => {\n            this.setState({animating: false, inOrder: true})\n        }, 100 * count)\n\n    }\n    time = (count, arr,i,j) => {\n        setTimeout(() => {\n            arr[j].isPointer = true;\n            arr[j+1].isPointer = true;\n            this.setState({nodes: arr, animating: true})\n            arr[j].isPointer = false;\n            arr[j+1].isPointer = false;\n            console.log(i)              \n        }, 100 * count)               \n      }\n\n\n    render() {\n        \n        return(\n            <div >\n                <button className={this.state.inOrder || this.state.animating ? 'hide-buton' : 'show-button'} onClick={this.onClick}>Animate bubble sort</button>\n                <button className={this.state.animating ? 'hide-buton' : 'show-button'} onClick={this.renew}>Shuffle</button>\n                <table className='grid'>\n                    {this.state.nodes.map((row) => {\n                        return (\n                            <thead key={row.key}>\n                                <tr className='no-margin'>\n                                    {row.numb.map((node) => {\n                                        return <th className=\"border\" key={node.key}><Node node={node} pointer={row.isPointer} key={node.key}/> </th>\n                                    })}\n                                </tr>                                \n                            </thead>\n                        );\n                    })}                    \n                </table>\n\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import logo from './logo.svg';\nimport Grid from './components/Grid';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}